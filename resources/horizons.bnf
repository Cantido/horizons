(* Overall document structure *)

S ::=
    <garbage*>,
    <separator>, file-header,
    (<ws>        geophysical-data)?
    (<ws>        physical-properties)?
    (<ws>        dynamical-characteristics)?
    (<separator>, <ephemeris-metadata>)?
    (<separator>, targeting)?
    (<separator>, time-frame)?
    (<separator>, constants)?
    (<separator>, <ephemeris-header>)?
    (<separator>, ephemeris)?
    (<separator>, <footer>)?
    (<separator> <#"."*> <select-prompt>)?;

(* General data types *)

<garbage> ::= #"[\d\\[\?1h\\= \^\>]+" | <ws>;
separator ::= <ws>, (short-sep | long-sep), <ws>, separator?;
short-sep ::= #"\*{79}";
long-sep ::= #"\*{110}";

space ::= #"[\s\n\r]";
ws ::= space*;

<digit> ::= #"\d";
integer ::= #"-?\d+" | comma-separated-integer;
<comma-separated-integer> ::= #"\d?\d?\d?,(\d\d\d,)+\d\d\d";
<integer-with-error> ::= #"\d+\(?\+\-\d+\)?";
float ::= #"\-?\d*\.\d*";
<float-with-error> ::= (#"\d*\.\d*\(\d\+\-\d\)") | (#"\d*\.\d*\s?\+\-\s?\d*\.\d*");
<approximate-integer> ::= #"~\d+";

sci-not ::= significand <ws "("? sci-not-separator> exponent <")"?>
<sci-not-separator> := (("x" | "*") ws "10^") | "E";
significand ::= float | integer;
exponent ::= integer;

timestamp ::= era?, <space>, date, <ws>, time, <space>, time-zone?;

date ::= (year <"-"> month <"-"> day) | (month <" "> day <", "> year);

era ::= "A.D."
year ::= integer;
month ::= "Jan" | "Feb" | "Mar" | "Apr" | "May" | "Jun" | "Jul" | "Aug" | "Sep" | "Oct" | "Nov" | "Dec";
day ::= integer
time ::= hour-of-day <":"> minute-of-hour (<":"> second-of-minute <"."> millisecond-of-second)?;

hour-of-day ::= integer;
minute-of-hour ::= integer;
second-of-minute ::= integer;
millisecond-of-second ::= integer;

(* TODO: property parse a seconds measurement like 22.4, currently this things there are 4 milliseconds *)
duration ::= days? (hours <ws? ("h" | "hr") ws>)? (minutes <ws? ("m" | "minutes") ws?>)? (seconds <"."> milliseconds <"s">)?;
days ::= (float | integer) <ws? "d" ws?>;
hours ::= float | float-with-error | integer;
minutes ::= integer;
seconds ::= integer;
milliseconds ::= integer;

time-zone ::= "UT"

(* Units using the UN/CEFACT Common Codes for Units of Measurement
    See http://www.unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_Rev9e_2014.xls
*)

unit-D54 ::= "W/m^2" | "Wm^2"; (* [sic] *)
unit-M62 ::= "("? ("km/s" | "km s^-1") ")"?;
unit-KEL ::= "K";

(* Domain-specific data types *)

body-name ::= #"\w+";
body-id ::= integer;

(* Document proper *)

file-header ::=
    revision-date   <space+>
    body-name       <space+>
    body-id         <space+>
    <#"\/ \d"?>

revision-date ::= <"Revised: "> date;

dynamical-characteristics ::= <dynamical-characteristics-header>  (<ws> geophysical-field)+;
geophysical-data ::=  <geophysical-data-header> (<ws> geophysical-field)+;
physical-properties ::= <physical-properties-header>  (<ws> geophysical-field)+;

<geophysical-field> ::=
    <"Mass layers:"> |
    <obliquity-source> |
    <surface-area-title> |
    a-roche-ice |
    atmospheric-mass |
    atmospheric-pressure |
    core-radius |
    crust-mass |
    density |
    dipole-tilt-offset |
    equatorial-gravity |
    equatorial-radius |
    escape-velocity |
    fig-offset |
    flattening |
    fluid-core-radius |
    g-equatorial |
    g-o |
    g-polar |
    geometric-albedo |
    gm-1-sigma |
    grav-spectral-fact |
    heat-flow-mass |
    hill-sphere-radius |
    hydrostatic-flattening |
    inferred-rotation-period |
    inner-core-mass |
    inner-core-radius |
    j2 |
    ks |
    m |
    magnetic-moment |
    mantle-mass |
    mass |
    mass-ratio-from-sun |
    maximum-angular-diameter |
    mean-daily-motion |
    mean-radius |
    mean-sidereal-orbital-period-days |
    mean-sidereal-orbital-period-years |
    mean-solar-day |
    mean-temperature |
    moment-of-inertia |
    monent-of-inertia-upper-bound |
    obliquity-to-orbit |
    ocean-mass |
    offset |
    orbit-velocity |
    outer-core-mass |
    polar-axis |
    polar-gravity |
    polar-radius |
    potential-love-k2 |
    rocky-core-mass |
    rotation-rate |
    semi-major-axis |
    sidereal-rotation-period |
    solar-constant |
    standard-gravitational-parameter |
    surface-area-land |
    surface-area-sea |
    topo-spectral-fact |
    visual-magnitude |
    visual-magnitude-opposition |
    volume |
    y-factor;

equals ::= space* "=" space*;

geophysical-data-header ::= ("GEOPHYSICAL DATA (updated " date "):") |  ("PHYSICAL DATA (updated " date "):");
dynamical-characteristics-header ::= "DYNAMICAL CHARACTERISTICS:";
physical-properties-header ::= "PHYSICAL PROPERTIES (revised " date "):";

a-roche-ice ::= <"A_roche(ice)/Rp" | "Aroche(ice)/Rp"> <equals> float;
atmospheric-mass ::= <"Atmos"> <equals> sci-not <" kg">;
atmospheric-pressure ::= <("Atm." | "Atmos.") " pressure" " (bar)"?> <equals> (float | integer)? <" bar"?>;
core-radius ::= <"Core radius (km)"> <equals> approximate-integer;
crust-mass ::= <"crust"> <equals> sci-not <" kg">;
density ::= <"Density", (", gm cm^-3" | " (g cm^-3)" | " (g/cm^3)")> <equals> (float | float-with-error);
dipole-tilt-offset ::= <"Dipole tilt/offset"> <equals> #"\d\.\ddeg/\d\.\dRp"
equatorial-gravity ::= <"Equ. gravity  ms^-2"> <equals> float;
equatorial-radius ::= <"Equatorial Radius, Re" | "Equ. radius, km" | "Equat. radius (1 bar)"> <equals> (integer | integer-with-error | float | float-with-error) <" km"?>;
escape-velocity ::= <"Escape" ws ("vel." | "velocity") ws? unit-M62?> <equals> float <ws> <unit-M62?>;
fig-offset ::= <"Fig. offset (Rcf-Rcm)"> <equals> (float-with-error | "0.19+-01") <" km"?>;
flattening ::= <"Flattening" ", f"?> <equals> (#"\d/\d\d\d\.\d\d\d" | float)?;
fluid-core-radius ::= <"Fluid core rad"> <equals> integer <" km">;
(* equatorial & polar gravity? units seem right. What is g-o? *)
g-equatorial ::= <"ge, m s^-2 (equatorial)" | "Equ. grav, ge (m/s^2)"> <equals> float;
g-o ::= <"go, m s^-2               = "> float;
g-polar ::= <"gp, m s^-2 (polar)" | "Pol. grav, gp (m/s^2)"> <equals> (float | float-with-error);
geometric-albedo ::= <"Geometric albedo"> <equals> float;
gm-1-sigma ::= <"GM 1-sigma " ("(km^3 s^-2)" | "(km^3/s^2)")> <equals> #"\+\- ?\d\.?\d+";
grav-spectral-fact ::= <"Grav spectral fact u"> <equals> (sci-not | float);
heat-flow-mass ::= <"Heat flow/mass (x10^7)"> <equals>  integer <ws "erg/gm*s">;
hill-sphere-radius ::= <("Hill's sphere rad. Rp" | "Hill's sphere radius")> <equals> (float | integer);
hydrostatic-flattening ::= <"Hydrostatic flat., fh"> <equals> float;
inferred-rotation-period ::= <"Inferred rot. period"> <equals> duration;
inner-core-mass ::= <"inner core     = "> sci-not <" kg">;
inner-core-radius ::= <"Inner core rad   = "> integer <" km">;
j2 ::= <"J2  (GEM T2, 1990)       = "> float;
ks ::= <"ks = 3*J2/m"> <equals> float;
m ::= <"m = w^2a^3/GM"> <equals> float;
magnetic-moment ::= <"Mag. mom (gauss Rp^3)" | "Magnetic moment" | "Mag.dip.mom(gauss-Rp^3)"> <equals> (#"< 1x10\^\-\d" | (float <ws "gauss Rp^3">?));
mantle-mass ::= <"mantle         = "> sci-not <" kg">;
mass ::= <"Mass (10^23 kg )" | "Mass, 10^24 kg" | "Mass (10^24 kg)" | "Mass (10^26 kg)">  <equals> (float | float-with-error);
mass-ratio-from-sun ::= <"Mass ratio " ("(Sun/" body-name ")" | "(sun/plnt)")> <equals> (integer | integer-with-error | float);
maximum-angular-diameter ::= <"Max. angular diam."> <equals> #'\d+\.\d+\"';
mean-daily-motion ::= <"Mean daily motion" ", n"?> <equals> float <ws> <"deg/d">;
mean-radius ::= <(("Mean radius" ws ", "? "("? "km" ")"?) | "Volumetric mean radius")> <equals> (float-with-error | integer-with-error) <ws "km">?;
<mean-sidereal-orbit-label> ::= <"Mean"? ws ("sidereal" | "Sidereal") ws (("orb" "."?)  | "orbit")? ws? (("per" "."?) | "period")>;
mean-sidereal-orbital-period-years ::= <mean-sidereal-orbit-label> <equals> float <ws> <("yrs" | "y" | "yr")?>;
mean-sidereal-orbital-period-days ::= <mean-sidereal-orbit-label> <equals> float <ws> <("d" | "days")>;
mean-solar-day ::= <"Mean solar day" ", days"?> <equals> float <" d"?>;
mean-temperature ::= <("Atmos. temp. (1 bar)") | ("Mean Temperature" (" (" | ", ") unit-KEL ")"?)> <equals> (integer | integer-with-error)? <ws> <unit-KEL?>;
moment-of-inertia ::= <("Mom. of Inertia" | "Moment of inertia" | "Mom. of inert. I/MRo^2")> <equals> float;
monent-of-inertia-upper-bound ::= <"I/MRo^2 (upper bound)"> <equals> float;
ocean-mass ::= <"oceans"> <equals> sci-not <" kg">;
obliquity-to-orbit ::= <"Obliquity to orbit"> <"[1]"?> <", deg"?> <equals> (float | #"\d.\d\d' \+/\- \d\.\d'") <" deg"?>;
offset ::= <"Offset (lat./long.)"> <equals> #"\d+d? ?\/ ?\d+d?" <ws "dg/dg">?;
orbit-velocity ::= <"Mean"? ws ("Orbit" | "orbit") ws ("vel." | "velocity") ","? ws unit-M62?> <equals> float <ws> <unit-M62?>;
outer-core-mass ::= <"outer core     = "> sci-not <" kg">;
polar-gravity ::= <"Polar gravity ms^-2"> <equals> float?;
polar-axis ::= <"Polar axis, km"> <equals> float;
polar-radius ::= <"Polar radius (km)"> <equals> integer-with-error;
potential-love-k2 ::= <("Potential Love # k2" | "Love no., k2")> <equals> <"~"?> (float | float-with-error)?;
rocky-core-mass ::= <"Rocky core mass (Mc/M)"> <equals> float;
rotation-rate ::= <("Rot. Rate (x10^5 s)" | "Mean rot. rate, rad s^-1" | "Rot. rate(10^-4 rad/s)")> <equals> (float | sci-not);
semi-major-axis ::= <"Semi-major axis"> <equals> integer-with-error?;
solar-constant ::= <("Solar constant, " unit-D54) | "Planetary Solar Const"> <equals> float  <ws "("? unit-D54 ")"?>?;
sidereal-rotation-period ::= <("Sidereal rot. period" | "Sidereal period, hr" | "Sidereal period" | "Rotation period")> <equals> (duration | float);
standard-gravitational-parameter ::= <"GM" (", km^3 s^-2" | " (km^3 s^-2)" | " (km^3/s^2)" )> <equals> (float | integer);
surface-area-title ::= "Surface Area:";
surface-area-land ::= <"land           = "> sci-not <" km">;
surface-area-sea ::= <"sea            = "> sci-not <" km">;
topo-spectral-fact ::= <"Topo. spectral fact t"> <equals> (sci-not | integer);
visual-magnitude ::= <("Visual" | "Vis.") ws ("mag." | "magnitude") ws "V(1,0)"> <equals> float;
visual-magnitude-opposition ::= <"Vis. mag. (opposition)"> <equals> <"+"?> float;
volume ::= <("Volume (x10^10 km^3)" | "Volume, 10^10 km^3")> <equals> float;
y-factor ::= <"Y factor (He/H ratio)"> <equals> float-with-error?;

ephemeris-metadata ::=
"Ephemeris / WWW_USER Mon Mar  6 16:56:26 2017 Pasadena, USA      / Horizons" <ws>;

targeting ::= target-body, center-body, center-site;

target-body ::= <"Target body name:"> targeting-body <ws>
center-body ::= <"Center body name:"> targeting-body <ws>
center-site ::= <"Center-site name:"> <space> "GEOCENTRIC" <ws>;

<targeting-body> := <space> body-name <space> <"("> body-id <")"> <space+> source;

source ::= <"{source:"> <space> "mar097" <"}">;
obliquity-source ::= "[1] Margot et al., Science 316, 2007";

time-frame ::= start-time, stop-time, step-size;

start-time ::= <"Start time      : "> timestamp <ws>;
stop-time ::= <"Stop  time      : "> timestamp <ws>;
step-size ::= <"Step-size       : "> duration <ws>;

colon ::= ws ":" ws;
by ::= ws "x" ws;

constants ::=
    target-pole-equ,
    target-radii,
    center-geodetic,
    center-cylindric,
    center-pole-equ,
    center-radii,
    target-primary,
    visibility-interferer,
    rel-light-bend,
    rel-light-bend-gm,
    atmospheric-refraction,
    ra-format,
    time-format,
    eop-file,
    eop-coverage,
    units-conversion,
    table-cutoffs-1,
    table-cutoffs-2;


target-pole-equ ::= <"Target pole/equ"> <colon> "IAU_MARS" <ws> <"{East-longitude -}"> <ws>;
target-radii ::= <"Target radii"> <colon> equator <by> meridian <by> pole <" km"> <ws> <"{Equator, meridian, pole}"> <ws>;
center-geodetic ::= <"Center geodetic"> <colon> longitude <","> latitude <","> altitude <ws> <"{E-lon(deg),Lat(deg),Alt(km)}"> <ws>;
center-cylindric ::= <"Center cylindric"> <colon> longitude <","> xy-dimension <","> z-dimension <ws> <"{E-lon(deg),Dxy(km),Dz(km)}"> <ws>;
center-pole-equ ::= <"Center pole/equ"> <colon> "High-precision EOP model" <ws> <"{East-longitude +}"> <ws>;
center-radii ::= <"Center radii"> <colon> "6378.1 x 6378.1 x 6356.8 km" <ws> <"{Equator, meridian, pole}"> <ws>;
target-primary ::= <"Target primary"> <colon> "Sun" <ws>;
visibility-interferer ::= <"Vis. interferer"> <colon> "MOON (R_eq= 1737.400) km" <ws> <source> <ws>;
rel-light-bend ::= <"Rel. light bend"> <colon> "Sun, EARTH" <ws> <source> <ws>;
rel-light-bend-gm ::= <"Rel. lght bnd GM"> <colon> "1.3271E+11, 3.9860E+05 km^3/s^2" <ws>;
atmospheric-refraction ::= <"Atmos refraction"> <colon> "NO (AIRLESS)" <ws>;
ra-format ::= <"RA format"> <colon> "HMS" <ws>;
time-format ::= <"Time format"> <colon> "CAL" <ws>;
eop-file ::= <"EOP file"> <colon> "eop.170306.p170528" <ws>;
eop-coverage ::= <"EOP coverage"> <colon> "DATA-BASED 1962-JAN-20 TO 2017-MAR-06. PREDICTS-> 2017-MAY-27" <ws>;
units-conversion ::= <"Units conversion"> <colon> "1 au= 149597870.700 km, c= 299792.458 km/s, 1 day= 86400.0 s" <ws>;
table-cutoffs-1 ::= <"Table cut-offs 1"> <colon> "Elevation (-90.0deg=NO ),Airmass (>38.000=NO), Daylight (NO )" <ws>;
table-cutoffs-2 ::= <"Table cut-offs 2"> <colon> "Solar Elongation (  0.0,180.0=NO ),Local Hour Angle( 0.0=NO )" <ws>;

equator ::= float;
meridian ::= float;
pole ::= float;

longitude ::= float;
latitude ::= float;
altitude ::= float

xy-dimension ::= float;
z-dimension ::= float;

ephemeris-header ::= " Date__(UT)__HR:MN     R.A._(ICRF/J2000.0)_DEC  APmag  S-brt            delta      deldot    S-O-T /r    S-T-O" <ws>;

ephemeris ::= <"$$SOE">, <ws>, ephemeris-line-item+, <"$$EOE">, <ws>;

ephemeris-line-item ::=
    <ws>, measurement-time,
    <ws>, ascension-declination,
    <ws>, apparent-magnitude,
    <ws>, surface-brightness,
    <ws>, range,
    <ws>, range-rate,
    <ws>, sun-observer-target-angle,
    <ws>, sun-observer-target-angle-direction,
    <ws>, sun-target-observer-angle,
    <ws>;

measurement-time ::= timestamp;

ascension-declination ::= #"\d\d \d\d \d\d\.\d\d \+\d\d \d\d \d\d\.\d";

apparent-magnitude ::= float;

surface-brightness ::= float;

range ::= float;
range-rate ::= float;
sun-observer-target-angle ::= float;

sun-observer-target-angle-direction ::= "/T" | "/L";

sun-target-observer-angle ::= float;

select-prompt ::= "Select ... [E]phemeris, [F]tp, [M]ail, [R]edisplay, ?, <cr>:" <ws>;

footer ::= "Column meaning:", #"[\s\S\w\W.]*";
